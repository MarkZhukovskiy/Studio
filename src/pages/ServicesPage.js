import React from 'react';
import Header from '../components/Header/header.jsx';
import Footer from '../components/Footer/footer.jsx';
import BriefModal from '../components/BriefModal/BriefModal.jsx';
import styles from './ServicesPage.module.css';
import { Link } from 'react-router-dom';
import FAQBlock from '../components/FAQBlock/FAQBlock.jsx';
import ProjectsOverview from '../components/ProjectsOverview/ProjectsOverview.jsx';

// Hero-–±–ª–æ–∫
function ServicesHero({ onCtaClick }) {
  return (
    <section className={styles.heroSection}>
      <div className={styles.heroContent}>
        <div className={styles.heroTextBlock}>
          <h1 className={styles.heroTitle}>–ß—Ç–æ –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º</h1>
          <p className={styles.heroSubtitle}>–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤–µ–±-—Å–µ—Ä–≤–∏—Å—ã –∏ –∫–∞—Å—Ç–æ–º–Ω—ã–µ IT-—Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏</p>
          <button className={styles.heroButton} onClick={onCtaClick}>–û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç</button>
        </div>
        <div className={styles.heroVisual}>
          {/* SVG-–∞–Ω–∏–º–∞—Ü–∏—è */}
          <svg width="260" height="260" viewBox="0 0 260 260" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="130" cy="130" r="120" stroke="#2563EB" strokeWidth="4" fill="none" opacity="0.15"/>
            <rect x="80" y="60" width="100" height="140" rx="18" fill="#2563EB" opacity="0.08"/>
            <rect x="100" y="80" width="60" height="100" rx="10" fill="#2563EB" opacity="0.15"/>
            <circle cx="130" cy="200" r="8" fill="#2563EB" opacity="0.3"/>
            <circle cx="200" cy="80" r="5" fill="#2563EB" opacity="0.2"/>
            <circle cx="60" cy="180" r="4" fill="#2563EB" opacity="0.2"/>
          </svg>
        </div>
      </div>
    </section>
  );
}

// –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —É—Å–ª—É–≥
const serviceCategories = [
  {
    id: 'mobile-apps',
    title: '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    description: 'iOS / Android / –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–µ (Flutter)',
    icon: (
      <svg width="48" height="48" viewBox="0 0 48 48" fill="none"><rect x="10" y="6" width="28" height="36" rx="4" stroke="#2563EB" strokeWidth="2"/><circle cx="24" cy="38" r="2" fill="#2563EB"/></svg>
    ),
    link: '/services/mobile-apps',
  },
  {
    id: 'web-apps',
    title: '–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    description: '–°–∞–π—Ç—ã, CRM, SaaS',
    icon: (
      <svg width="48" height="48" viewBox="0 0 48 48" fill="none"><rect x="6" y="12" width="36" height="24" rx="3" stroke="#2563EB" strokeWidth="2"/><rect x="10" y="16" width="28" height="16" rx="2" fill="#2563EB" opacity="0.08"/></svg>
    ),
    link: '/services/web-apps',
  },
  {
    id: 'telegram-bots',
    title: '–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç—ã –∏ Web Apps',
    description: '–ß–∞—Ç—ã, –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
    icon: (
      <svg width="48" height="48" viewBox="0 0 48 48" fill="none"><circle cx="24" cy="24" r="20" stroke="#2563EB" strokeWidth="2"/><path d="M14 24L22 32L36 16" stroke="#2563EB" strokeWidth="2.5" strokeLinecap="round"/></svg>
    ),
    link: '/services/telegram-bots',
  },
];

function ServiceCategories() {
  return (
    <section className={styles.categoriesSection}>
      <h2 className={styles.sectionTitle}>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏</h2>
      <div className={styles.categoriesGrid}>
        {serviceCategories.map(cat => (
          <Link to={cat.link} className={styles.categoryCard} key={cat.id} aria-label={cat.title}>
            <div className={styles.categoryIcon}>{cat.icon}</div>
            <div className={styles.categoryContent}>
              <h3 className={styles.categoryTitle}>{cat.title}</h3>
              <p className={styles.categoryDesc}>{cat.description}</p>
            </div>
          </Link>
        ))}
      </div>
    </section>
  );
}

// –ß–µ–∫-–ª–∏—Å—Ç —ç—Ç–∞–ø–æ–≤ (–ø—Ä–∏–º–µ—Ä –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
const mobileChecklist = [
  { icon: 'üîç', label: '–ê–Ω–∞–ª–∏–∑ –∏ –∞—É–¥–∏—Ç' },
  { icon: 'üìù', label: '–ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { icon: 'üé®', label: 'UI/UX-–¥–∏–∑–∞–π–Ω' },
  { icon: 'üíª', label: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' },
  { icon: 'üß™', label: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' },
  { icon: 'üöÄ', label: '–ü—É–±–ª–∏–∫–∞—Ü–∏—è' },
  { icon: 'üîÑ', label: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞' },
];

function ServiceChecklist() {
  return (
    <section className={styles.checklistSection}>
      <h2 className={styles.sectionTitle}>–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —É—Å–ª—É–≥—É</h2>
      <div className={styles.checklistGrid}>
        {mobileChecklist.map((item, i) => (
          <div className={styles.checklistItem} key={i}>
            <span className={styles.checklistIcon}>{item.icon}</span>
            <span className={styles.checklistLabel}>{item.label}</span>
          </div>
        ))}
      </div>
    </section>
  );
}

// –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
const advantages = [
  { icon: '‚è≥', label: '–û–ø—ã—Ç –±–æ–ª–µ–µ 5 –ª–µ—Ç' },
  { icon: 'üë®‚Äçüíª', label: '–ö–æ–º–∞–Ω–¥–∞ in-house' },
  { icon: 'üîé', label: '–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å' },
  { icon: 'üí¨', label: '–û–±—ä—è—Å–Ω—è–µ–º —Å–ª–æ–∂–Ω–æ–µ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º' },
  { icon: 'üöÄ', label: '–û—Ç –∏–¥–µ–∏ –¥–æ —Ä–µ–ª–∏–∑–∞' },
];

function AdvantagesBlock() {
  return (
    <section className={styles.advantagesSection}>
      <h2 className={styles.sectionTitle}>–ü–æ—á–µ–º—É –º—ã</h2>
      <div className={styles.advantagesGrid}>
        {advantages.map((item, i) => (
          <div className={styles.advantageCard} key={i}>
            <span className={styles.advantageIcon}>{item.icon}</span>
            <span className={styles.advantageLabel}>{item.label}</span>
          </div>
        ))}
      </div>
    </section>
  );
}

// FAQ/–≠—Ç–∞–ø—ã —Ä–∞–±–æ—Ç—ã
const faqData = {
  title: '–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º',
  subtitle: '–û—Ç –∏–¥–µ–∏ –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ',
  faqItems: [
    { id: 1, question: '–° —á–µ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞?', answer: '–° –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–¥–∞—á–∏.' },
    { id: 2, question: '–ö–∞–∫–∏–µ —ç—Ç–∞–ø—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏?', answer: '–ê–Ω–∞–ª–∏–∑, –ø—Ä–æ—Ç–æ—Ç–∏–ø, –¥–∏–∑–∞–π–Ω, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—É–±–ª–∏–∫–∞—Ü–∏—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞.' },
    { id: 3, question: '–ú–æ–∂–Ω–æ –ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–µ–∫—Ç?', answer: '–î–∞, –º—ã –±–µ—Ä–µ–º –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –∞—É–¥–∏—Ç.' },
  ]
};

// –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ-–ø—Ä–µ–≤—å—é (–∑–∞–≥–ª—É—à–∫–∞)
const portfolioData = {
  title: '–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã',
  subtitle: '–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–µ–π—Å—ã',
  projects: [
    {
      id: 1,
      category: '–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      title: '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏',
      description: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã.',
      stats: { '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π': '10 000+', '–°—Ä–æ–∫': '3 –º–µ—Å.' }
    },
    {
      id: 2,
      category: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      title: 'CRM –¥–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞',
      description: '–í–µ–±-—Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏.',
      stats: { '–ö–ª–∏–µ–Ω—Ç–æ–≤': '500+', '–°—Ä–æ–∫': '2 –º–µ—Å.' }
    },
    {
      id: 3,
      category: 'Telegram Web App',
      title: '–ë–æ—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      description: 'Telegram-–±–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤.',
      stats: { '–î–∏–∞–ª–æ–≥–æ–≤': '20 000+', '–°—Ä–æ–∫': '1.5 –º–µ—Å.' }
    },
  ]
};

function ServicesPage() {
  const [isModalOpen, setIsModalOpen] = React.useState(false);
  const handleOpenModal = () => setIsModalOpen(true);
  const handleCloseModal = () => setIsModalOpen(false);

  return (
    <div className={styles.servicesPage}>
      <Header onOpenModal={handleOpenModal} />
      <main>
        <ServicesHero onCtaClick={handleOpenModal} />
        <ServiceCategories />
        <ServiceChecklist />
        <AdvantagesBlock />
        <ProjectsOverview data={portfolioData} onOpenModal={handleOpenModal} />
        <FAQBlock data={faqData} />
        <section className={styles.ctaSection}>
          <h2 className={styles.ctaTitle}>–û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?</h2>
          <button className={styles.ctaButton} onClick={handleOpenModal}>–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</button>
        </section>
      </main>
      <Footer />
      <BriefModal isOpen={isModalOpen} onClose={handleCloseModal} />
    </div>
  );
}

export default ServicesPage; 